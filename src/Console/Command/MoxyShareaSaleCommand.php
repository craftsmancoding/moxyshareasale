<?php namespace Moxyshareasale\Console\Command;
/**
 *
 */


use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Yaml\Parser;

class MoxyShareaSaleCommand extends Command
{
    public $modx;

    protected function configure()
    {
        $this
            ->setName('export')
            ->setDescription('Export Moxycart info to an XLS file for ShareaSale')
            ->addArgument('merchant_id', InputArgument::REQUIRED, 'Merchant ID')
            ->addArgument('target', InputArgument::REQUIRED, 'Path to Excel file.')
            ->addOption(
                'overwrite',
                'o',
                InputOption::VALUE_NONE,
                "Overwrite target file?"
            );

    }

    /**
     * See https://github.com/PHPOffice/PHPExcel/blob/develop/Documentation/markdown/Overview/10-Reading-and-Writing.md
     *
     * @param InputInterface  $input
     * @param OutputInterface $output
     *
     * @return int|null|void
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->modx = get_modx();
        $this->modx->initialize('mgr');

        $merchant_id = $input->getArgument('merchant_id');
        $target = $input->getArgument('target');
        $overwrite = $input->getOption('overwrite');

        if (file_exists($target) && !$overwrite)
        {
            $output->writeln('<error>Destination file exists: '.$target.'</error>');
            $output->writeln('<error>Will not overwrite unless forced (--overwrite)</error>');
            exit;
            //throw new \Exception('File does not exist: '. $source);
        }

        $map = array(
            'moxycart2xls'=>array()
        );
        $mapfile = dirname(dirname(dirname(__FILE__))).'/export.yml';

        $yaml = new Parser();
        $map = $yaml->parse(file_get_contents($mapfile));
        $headers = $map['moxycart2xls'];


        $objPHPExcel = new \PHPExcel();
        $objPHPExcel->getProperties()
            ->setCreator("Craftsman Coding: moxyshareasale")
            ->setLastModifiedBy("Moxycart export")
            ->setTitle("Moxycart Export: ".date('Y-m-d H:i:s'))
            ->setSubject("Contents of Moxycart ". $this->modx->getOption('site_name'))
            ->setCompany('Craftsman Coding, LLC')
            ->setDescription("Document generated by the moxyshareasale command line tool (https://craftsmancoding.com/)")
            ->setKeywords("moxyshareasale export craftsmancoding")
            ->setCategory("Export");

        // Write Header Row
        $objPHPExcel->setActiveSheetIndex(0);
        $W = $objPHPExcel->getActiveSheet();
        $col = 'A';

        foreach ($headers as $k => $v)
        {
            $W->setCellValue($col.'1', $v);
            $headers[$k] = $col; // set the column
            $col++; // this trick works: Z++ --> AA, AB, etc.
        }



        $criteria = $this->modx->newQuery('Product');

        if ($Products = $this->modx->getCollectionGraph('Product', '{"Image":{}}', $criteria)) {
            $row = 2;
            foreach($Products as $prod) {
                foreach($headers as $field => $col)
                {

                    $v = $prod->get($field);

                    $W->setCellValue($col.$row, $v);
                }

                $row++;
            }

        }

        $objWriter = new \PHPExcel_Writer_Excel2007($objPHPExcel);
        $objWriter->setPreCalculateFormulas(false);
        $objWriter->save($target);

        $output->writeln('Export complete @ '.date('Y-m-d H:i:s'));
        $output->writeln("Peak memory usage: " . (memory_get_peak_usage(true) / 1024 / 1024) . " MB");

    }


}
/*EOF*/